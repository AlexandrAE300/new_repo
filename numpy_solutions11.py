# -*- coding: utf-8 -*-
""""Numpy_solutions11

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19wOjFUrC8QeQeY8JTlFfzRKSGLV8rPew
"""

import  numpy as np 
import pandas as pd
#b
array=np.zeros(10)
print(array)



"""c.Создать массив из 10 единиц"""

array=np.ones(10)
print(array)

"""d.Создать массив из 10 пятерок"""

array=np.ones(10)*5
print(array)

"""e.Создать массив из целых чисел от 10 до 50"""

a = np.arange(10,51)
print(a)

"""f.Создать массив из четных чисел от 10 до 50"""

a = np.arange(10,51,2)
print(a)

"""g.Создать матрицу 3х3 с числами от 0 до 8"""

array=np.arange(0,9).reshape(3,3)
print(array)

"""h.Создать единичную матрицу 3x3"""

array=np.ones((3,3))
print(array)

"""i.Используйте NumPy для генерации случайного числа от 0 до 1"""

array = np.random.normal(0,1)
print(array)

"""j.Используйте NumPy для генерации массива из 25 случайных чисел,взятых из стандартного нормального распределения"""

array = np.random.normal(0,1,25)
print(array)

"""k.Создайте следующую матрицу используя функции библиотеки NumPy"""

array=np.arange(0,1,0.01).reshape(10,10)
print(array)

"""l.Дана стартовая матрица (обязательно запустите код ниже в вашемрешении!). Эта матрица будет использоваться в последующих задачах"""

mat = np.arange(1,26).reshape(5,5)
print(mat)

"""Необходимо написать код который вернет следующую матрицуиз стартовой:"""

print(mat[2:,1:])

"""m.Написать код обращения к элементу который вернет значение  20 изстартовой матрицы задачи l."""

print(mat[3,4])

"""n.Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже"""

print(mat[:3,1])

"""o.Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже"""

print(mat[4:])

"""p.Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже"""

print(mat[3:])

"""q.Получить сумму всех значений в стартовой матрице ma"""

print (sum(sum(mat)))

"""r.Получить стандартное отклонение в стартовой матрице mat"""

res_std = np.std(mat) 
print(res_std)

"""s.Получить сумму значений в колонках в стартовой матрице ma"""

res_std=np.sum(mat, axis=0)
print(res_std)